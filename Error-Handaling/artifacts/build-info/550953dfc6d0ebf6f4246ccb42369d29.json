{
	"id": "550953dfc6d0ebf6f4246ccb42369d29",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Error-Handaling/error.sol": {
				"content": "pragma solidity^0.5.11;\r\n\r\ncontract Myerror{\r\n    uint a;\r\n    function foo() external{\r\n        if (a == 10) {\r\n            revert ('this is why it reverts');\r\n        }\r\n        require (a!=10, 'this is why it reverts');\r\n        assert(a!=10);\r\n\r\n    }\r\n    function willThrow() external{\r\n        revert('bcz reasons');\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Error-Handaling/error.sol": {
				"Myerror": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "willThrow",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Error-Handaling/error.sol\":27:333  contract Myerror{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Error-Handaling/error.sol\":27:333  contract Myerror{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Error-Handaling/error.sol\":27:333  contract Myerror{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Error-Handaling/error.sol\":27:333  contract Myerror{\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x18955b1e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc2985578\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Error-Handaling/error.sol\":261:330  function willThrow() external{\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"Error-Handaling/error.sol\":63:255  function foo() external{\r... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Error-Handaling/error.sol\":261:330  function willThrow() external{\r... */\n    tag_6:\n        /* \"Error-Handaling/error.sol\":301:322  revert('bcz reasons') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x62637a20726561736f6e73000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Error-Handaling/error.sol\":63:255  function foo() external{\r... */\n    tag_8:\n        /* \"Error-Handaling/error.sol\":106:108  10 */\n      0x0a\n        /* \"Error-Handaling/error.sol\":101:102  a */\n      sload(0x00)\n        /* \"Error-Handaling/error.sol\":101:108  a == 10 */\n      eq\n        /* \"Error-Handaling/error.sol\":97:170  if (a == 10) {\r... */\n      iszero\n      tag_11\n      jumpi\n        /* \"Error-Handaling/error.sol\":125:158  revert ('this is why it reverts') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7468697320697320776879206974207265766572747300000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Error-Handaling/error.sol\":97:170  if (a == 10) {\r... */\n    tag_11:\n        /* \"Error-Handaling/error.sol\":192:194  10 */\n      0x0a\n        /* \"Error-Handaling/error.sol\":189:190  a */\n      sload(0x00)\n        /* \"Error-Handaling/error.sol\":189:194  a!=10 */\n      eq\n      iszero\n        /* \"Error-Handaling/error.sol\":180:221  require (a!=10, 'this is why it reverts') */\n      tag_12\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7468697320697320776879206974207265766572747300000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_12:\n        /* \"Error-Handaling/error.sol\":242:244  10 */\n      0x0a\n        /* \"Error-Handaling/error.sol\":239:240  a */\n      sload(0x00)\n        /* \"Error-Handaling/error.sol\":239:244  a!=10 */\n      eq\n      iszero\n        /* \"Error-Handaling/error.sol\":232:245  assert(a!=10) */\n      tag_13\n      jumpi\n      invalid\n    tag_13:\n        /* \"Error-Handaling/error.sol\":63:255  function foo() external{\r... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820c9e8a3211ca9534cf80fd5052d677c3908c97bd774a1c67b677166391c127f9364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806318955b1e1461003b578063c298557814610045575b600080fd5b61004361004f565b005b61004d6100bd565b005b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f62637a20726561736f6e7300000000000000000000000000000000000000000081525060200191505060405180910390fd5b600a6000541415610136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746869732069732077687920697420726576657274730000000000000000000081525060200191505060405180910390fd5b600a60005414156101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746869732069732077687920697420726576657274730000000000000000000081525060200191505060405180910390fd5b600a60005414156101bc57fe5b56fea265627a7a72315820c9e8a3211ca9534cf80fd5052d677c3908c97bd774a1c67b677166391c127f9364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18955B1E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC2985578 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xBD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x62637A20726561736F6E73000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7468697320697320776879206974207265766572747300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7468697320697320776879206974207265766572747300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1BC JUMPI INVALID JUMPDEST JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC9 0xE8 LOG3 0x21 SHR 0xA9 MSTORE8 0x4C 0xF8 0xF 0xD5 SDIV 0x2D PUSH8 0x7C3908C97BD774A1 0xC6 PUSH28 0x677166391C127F9364736F6C63430005110032000000000000000000 ",
							"sourceMap": "27:306:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:306:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806318955b1e1461003b578063c298557814610045575b600080fd5b61004361004f565b005b61004d6100bd565b005b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f62637a20726561736f6e7300000000000000000000000000000000000000000081525060200191505060405180910390fd5b600a6000541415610136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746869732069732077687920697420726576657274730000000000000000000081525060200191505060405180910390fd5b600a60005414156101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746869732069732077687920697420726576657274730000000000000000000081525060200191505060405180910390fd5b600a60005414156101bc57fe5b56fea265627a7a72315820c9e8a3211ca9534cf80fd5052d677c3908c97bd774a1c67b677166391c127f9364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18955B1E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC2985578 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xBD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x62637A20726561736F6E73000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7468697320697320776879206974207265766572747300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7468697320697320776879206974207265766572747300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1BC JUMPI INVALID JUMPDEST JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC9 0xE8 LOG3 0x21 SHR 0xA9 MSTORE8 0x4C 0xF8 0xF 0xD5 SDIV 0x2D PUSH8 0x7C3908C97BD774A1 0xC6 PUSH28 0x677166391C127F9364736F6C63430005110032000000000000000000 ",
							"sourceMap": "27:306:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:306:0;;;;;;;;;;;;;;;;;;;;;;;;261:69;;;:::i;:::-;;63:192;;;:::i;:::-;;261:69;301:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63:192;106:2;101:1;;:7;97:73;;;125:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;97:73;192:2;189:1;;:5;;180:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;242:2;239:1;;:5;;232:13;;;;63:192::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "99800",
								"executionCost": "147",
								"totalCost": "99947"
							},
							"external": {
								"foo()": "2622",
								"willThrow()": "236"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 333,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "MSTORE"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 333,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c9e8a3211ca9534cf80fd5052d677c3908c97bd774a1c67b677166391c127f9364736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "18955B1E"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "C2985578"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 333,
											"name": "REVERT"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "STOP"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "JUMPDEST"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "JUMPDEST"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "STOP"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 261,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP3"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "SUB"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP3"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "62637A20726561736F6E73000000000000000000000000000000000000000000"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "SUB"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "SWAP1"
										},
										{
											"begin": 301,
											"end": 322,
											"name": "REVERT"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 108,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 101,
											"end": 102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 101,
											"end": 102,
											"name": "SLOAD"
										},
										{
											"begin": 101,
											"end": 108,
											"name": "EQ"
										},
										{
											"begin": 97,
											"end": 170,
											"name": "ISZERO"
										},
										{
											"begin": 97,
											"end": 170,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 97,
											"end": 170,
											"name": "JUMPI"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "MLOAD"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP2"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "MSTORE"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP1"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP1"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP3"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP2"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "SUB"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP3"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "MSTORE"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP2"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "MSTORE"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP1"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "7468697320697320776879206974207265766572747300000000000000000000"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP2"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "MSTORE"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "POP"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "SWAP2"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "POP"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "POP"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "MLOAD"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "DUP1"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "SWAP2"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "SUB"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "SWAP1"
										},
										{
											"begin": 125,
											"end": 158,
											"name": "REVERT"
										},
										{
											"begin": 97,
											"end": 170,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 97,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 194,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "SLOAD"
										},
										{
											"begin": 189,
											"end": 194,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 194,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "MLOAD"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP2"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "MSTORE"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "ADD"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "ADD"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP3"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP2"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "SUB"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP3"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "MSTORE"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP2"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "MSTORE"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "ADD"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "7468697320697320776879206974207265766572747300000000000000000000"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP2"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "MSTORE"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "POP"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "ADD"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "SWAP2"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "POP"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "POP"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "MLOAD"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "SWAP2"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "SUB"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "SWAP1"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "REVERT"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 180,
											"end": 221,
											"name": "JUMPDEST"
										},
										{
											"begin": 242,
											"end": 244,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 239,
											"end": 240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 239,
											"end": 240,
											"name": "SLOAD"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "EQ"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "ISZERO"
										},
										{
											"begin": 232,
											"end": 245,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 232,
											"end": 245,
											"name": "JUMPI"
										},
										{
											"begin": 232,
											"end": 245,
											"name": "INVALID"
										},
										{
											"begin": 232,
											"end": 245,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 232,
											"end": 245,
											"name": "JUMPDEST"
										},
										{
											"begin": 63,
											"end": 255,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"foo()": "c2985578",
							"willThrow()": "18955b1e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"willThrow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Error-Handaling/error.sol\":\"Myerror\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Error-Handaling/error.sol\":{\"keccak256\":\"0xf75f414221efbe41b8502e24fc59bb5939aa6c4c6e78bfed8bef08601b4d5242\",\"urls\":[\"bzz-raw://230028809f81ccc6e6bd17ab54ae8f4b2ddde14f2bd68892ab4b1d3c2229d2f5\",\"dweb:/ipfs/QmbBoFg8K5tndwSPCuyE6a4MGeCJGiHL2vykU3ySewm6pG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Error-Handaling/error.sol:Myerror",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Error-Handaling/error.sol:5:5: Warning: Function state mutability can be restricted to view\n    function foo() external{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 255,
					"file": "Error-Handaling/error.sol",
					"start": 63
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Error-Handaling/error.sol:13:5: Warning: Function state mutability can be restricted to pure\n    function willThrow() external{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 330,
					"file": "Error-Handaling/error.sol",
					"start": 261
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Error-Handaling/error.sol": {
				"ast": {
					"absolutePath": "Error-Handaling/error.sol",
					"exportedSymbols": {
						"Myerror": [
							38
						]
					},
					"id": 39,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "Myerror",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "a",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "50:6:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "50:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "86:169:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 6,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "106:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 14,
												"nodeType": "IfStatement",
												"src": "97:73:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "110:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "74686973206973207768792069742072657665727473",
																		"id": 10,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "133:24:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7c64fad28c02809f86e9364eb219916d3b956798bf035b724d5d7a94f6df4077",
																			"typeString": "literal_string \"this is why it reverts\""
																		},
																		"value": "this is why it reverts"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_7c64fad28c02809f86e9364eb219916d3b956798bf035b724d5d7a94f6df4077",
																			"typeString": "literal_string \"this is why it reverts\""
																		}
																	],
																	"id": 9,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		58,
																		59
																	],
																	"referencedDeclaration": 59,
																	"src": "125:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "125:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 12,
															"nodeType": "ExpressionStatement",
															"src": "125:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "189:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "192:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "189:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "74686973206973207768792069742072657665727473",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "196:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c64fad28c02809f86e9364eb219916d3b956798bf035b724d5d7a94f6df4077",
																"typeString": "literal_string \"this is why it reverts\""
															},
															"value": "this is why it reverts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c64fad28c02809f86e9364eb219916d3b956798bf035b724d5d7a94f6df4077",
																"typeString": "literal_string \"this is why it reverts\""
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															56,
															57
														],
														"referencedDeclaration": 57,
														"src": "180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "180:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "180:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 23,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "239:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "242:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "239:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "232:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "232:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "232:13:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "86:0:0"
									},
									"scope": 38,
									"src": "63:192:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "290:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "62637a20726561736f6e73",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "308:13:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9bb8475299e5cf603dcc66a272c7630465a2fbf3ca88f24a40ae69500769838f",
																"typeString": "literal_string \"bcz reasons\""
															},
															"value": "bcz reasons"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9bb8475299e5cf603dcc66a272c7630465a2fbf3ca88f24a40ae69500769838f",
																"typeString": "literal_string \"bcz reasons\""
															}
														],
														"id": 32,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58,
															59
														],
														"referencedDeclaration": 59,
														"src": "301:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "301:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "301:21:0"
											}
										]
									},
									"documentation": null,
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "willThrow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:0:0"
									},
									"scope": 38,
									"src": "261:69:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 39,
							"src": "27:306:0"
						}
					],
					"src": "0:333:0"
				},
				"id": 0
			}
		}
	}
}